{"version":3,"sources":["components/MoreButton.js","components/MaterialButton.js","components/SearchBar.js","components/Header.js","components/Sources.js","components/SourceItem.js","components/NoData.js","components/News.js","components/NewsItem.js","NewsApp.js","serviceWorker.js","index.js"],"names":["MoreButton","react_default","a","createElement","className","onClick","this","props","React","Component","MaterialButton","title","SearchBar","type","name","placeholder","value","onChange","onKeyUp","src_components_MaterialButton","Header","Sources","sources","map","s","id","NoData","News","articles","style","backgroundImage","concat","urlToImage","href","url","source","description","NewsApp","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","apiKey","curPage","endPage","searchQuery","lastRequest","loadMore","state","loadData","processSources","bind","handleSearchClick","json","freshArticles","length","setState","e","target","processArticles","req","query","trim","keyCode","func","request","Request","fetch","then","response","myJson","src_components_Header","src_components_SearchBar","handleSearchChange","handleSearchKeyUP","src_components_Sources","handleFilterClick","src_components_News","NoData_NoData","src_components_MoreButton","handleLoadMoreClick","Boolean","window","location","hostname","match","ReactDOM","render","src_NewsApp_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9ef064c1.chunk.js","sourcesContent":["import React from 'react';\nimport './MoreButton.css'\n\nclass MoreButton extends React.Component {\n  render() {\n    return (\n        <button\n            className=\"load-more-btn\"\n            onClick={this.props.onClick}>\n          LOAD<br/>MORE\n        </button>\n    )\n  }\n}\n\nexport default MoreButton;","import React from 'react';\nimport './MaterialButton.css'\n\nclass MaterialButton extends React.Component {\n  render() {\n    return (\n        <button\n            className=\"search-btn\"\n            onClick={this.props.onClick}\n        >\n          {this.props.title}\n        </button>\n    )\n  }\n}\n\nexport default MaterialButton;","import React from 'react';\nimport './SearchBar.css'\nimport MaterialButton from \"./MaterialButton\";\n\nclass SearchBar extends React.Component {\n  render() {\n    return (\n        <div className=\"search-wrapper\">\n          <input type=\"text\"\n                 name=\"search\"\n                 placeholder=\"Find\"\n                 className=\"search-edit\"\n                 value={this.props.value}\n                 onChange={this.props.onChange}\n                 onKeyUp={this.props.onKeyUp}\n          />\n          <MaterialButton\n              title='FIND'\n              onClick={this.props.onClick}\n          />\n        </div>\n    )\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Header.css'\n\nclass Header extends React.Component {\n  render() {\n    return (\n        <header>\n          <h1>{this.props.title}</h1>\n        </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport './Sources.css'\nimport SourceItem from \"./SourceItem\";\n\nclass Sources extends React.Component {\n  render() {\n    return (\n        <nav\n            className=\"sources-container\"\n            onClick={this.props.onClick}\n        >\n          {this.props.sources.map(s => SourceItem(s))}\n        </nav>\n    )\n  }\n}\n\nexport default Sources;","import React from 'react';\nimport './SourceItem.css'\n\nexport default function SourceItem(props) {\n  return <button className=\"source__item\" id={props.id}>{props.name}</button>;\n}\n","import React from 'react';\nimport './NoData.css'\n\nexport default function NoData() {\n  return (\n      <div className=\"no-data\">\n        <span>No items found ಠ╭╮ಠ</span>\n      </div>\n  );\n}\n\n","import React from 'react';\nimport './News.css'\nimport NewsItem from \"./NewsItem\";\n\nclass News extends React.Component {\n  render() {\n    return (\n        <div className=\"news-container\">\n          {this.props.articles.map(a => NewsItem(a))}\n        </div>\n    )\n  }\n}\n\nexport default News;","import React from 'react';\nimport './NewsItem.css'\n\nexport default function NewsItem(props) {\n  return (\n      <div className=\"news__item\">\n        <div className=\"news__meta\">\n          <div className=\"news__meta-photo\"\n               style={{backgroundImage: `url(\"${props.urlToImage || 'img/placeholder.jpg'}\")`}}/>\n        </div>\n        <a className=\"news__item-link\" href={props.url}>\n          <div className=\"news__description\">\n            <h2 className=\"news__description-title\">{props.title}</h2>\n            <h3 className=\"news__description-source\">{props.source.name}</h3>\n            <p className=\"news__description-content\">{props.description}</p>\n            <p className=\"news__read-more\">\n            </p>\n          </div>\n        </a>\n      </div>\n  );\n}","import React from 'react';\nimport './NewsApp.css'\nimport MoreButton from \"./components/MoreButton\";\nimport SearchBar from \"./components/SearchBar\";\nimport Header from \"./components/Header\";\nimport Sources from \"./components/Sources\";\nimport NoData from \"./components/NoData\";\nimport News from \"./components/News\";\n\nclass NewsApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.apiKey = 'bcebc7a888eb4ad885163a49396d5489';\n    this.curPage = 0;\n    this.endPage = 8;\n    this.searchQuery = '';\n    this.lastRequest = '';\n    this.loadMore = true;\n    this.state = {\n      articles: [],\n      sources: []\n    }\n  }\n\n  componentDidMount() {\n    this.loadData(`sources?`, this.processSources.bind(this));\n    this.handleSearchClick();\n  }\n\n  processArticles(json) {\n    const freshArticles = json.articles;\n    if (freshArticles.length)\n      this.curPage++;\n    if (this.curPage === this.endPage || freshArticles.length < 5)\n      this.loadMore = false;\n    this.setState((state) => ({articles: state.articles.concat(json.articles)}));\n  }\n\n  processSources(json) {\n    this.setState({sources: json['sources']});\n  }\n\n  handleFilterClick(e) {\n    if (!e.target.id)\n      return;\n    this.state.articles = [];\n    this.curPage = 0;\n    this.loadMore = true;\n    this.loadData(`everything?sources=${e.target.id}`, this.processArticles.bind(this));\n  }\n\n  handleSearchClick(e) {\n    const req = this.searchQuery;\n    const query = req.trim() ? `everything?q=${req}` : `top-headlines?country=us`;\n    this.state.articles = [];\n    this.curPage = 0;\n    this.loadData(query, this.processArticles.bind(this));\n  }\n\n  handleSearchChange(e) {\n    this.searchQuery = e.target.value;\n  }\n\n  handleSearchKeyUP(e) {\n    if (e.keyCode === 13)\n      this.handleSearchClick(e);\n  }\n\n  handleLoadMoreClick() {\n    this.loadData(null, this.processArticles.bind(this));\n  }\n\n  loadData(query, func) {\n    if (!query) {\n      query = this.lastRequest;\n    } else {\n      this.lastRequest = query;\n    }\n    const url = `https://newsapi.org/v2/${query}&pageSize=5&page=${this.curPage + 1}&apiKey=${this.apiKey}`;\n    const request = new Request(url);\n    fetch(request).then((response) => response.json()).then((myJson) => func(myJson));\n  }\n\n  render() {\n    return (\n        <div className=\"content\">\n          <Header title='Hot News Every Day'/>\n          <main className=\"content\">\n            <SearchBar\n                onChange={this.handleSearchChange.bind(this)}\n                onKeyUp={this.handleSearchKeyUP.bind(this)}\n                onClick={this.handleSearchClick.bind(this)}\n            />\n            <Sources\n                sources={this.state.sources}\n                onClick={this.handleFilterClick.bind(this)}\n            />\n            {this.state.articles.length\n                ? <News articles={this.state.articles}/>\n                : <NoData/>\n            }\n            {this.loadMore\n                ? <MoreButton onClick={this.handleLoadMoreClick.bind(this)}/>\n                : null\n            }\n          </main>\n        </div>\n    );\n  }\n}\n\nexport default NewsApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. NewsApp is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport NewsApp from './NewsApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<NewsApp />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}